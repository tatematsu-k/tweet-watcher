AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  tweet-watcher

Resources:
  SettingsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: SettingsTable
      AttributeDefinitions:
        - AttributeName: keyword
          AttributeType: S
        - AttributeName: slack_ch
          AttributeType: S
        - AttributeName: end_at
          AttributeType: S
      KeySchema:
        - AttributeName: keyword
          KeyType: HASH
        - AttributeName: slack_ch
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: end_at-index
          KeySchema:
            - AttributeName: end_at
              KeyType: HASH
            - AttributeName: keyword
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  NotificationsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: NotificationsTable
      AttributeDefinitions:
        - AttributeName: tweet_uid
          AttributeType: S
        - AttributeName: slack_ch
          AttributeType: S
      KeySchema:
        - AttributeName: tweet_uid
          KeyType: HASH
        - AttributeName: slack_ch
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  SettingsApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: settings_api.lambda_handler
      Runtime: python3.13
      CodeUri: settings_api/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SettingsTable
      Events:
        GetSettings:
          Type: Api
          Properties:
            Path: /settings
            Method: get
        CreateSetting:
          Type: Api
          Properties:
            Path: /settings
            Method: post
        UpdateSetting:
          Type: Api
          Properties:
            Path: /settings
            Method: put
        DeleteSetting:
          Type: Api
          Properties:
            Path: /settings
            Method: delete

  BatchWatcherFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: batches.tweet_monitor_batch.lambda_handler
      Runtime: python3.11
      CodeUri: batches/
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref SettingsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref NotificationsTable
      Environment:
        Variables:
          LIKE_THRESHOLD: "10"
          RETWEET_THRESHOLD: "5"
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: rate(15 minutes)
